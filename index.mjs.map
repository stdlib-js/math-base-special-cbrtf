{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32' ;\nimport cbrt from '@stdlib/math-base-special-cbrt' ;\n\n\n// MAIN //\n\n/**\n* Computes the cube root of a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} cube root\n*\n* @example\n* var v = cbrtf( 64.0 );\n* // returns 4.0\n*\n* @example\n* var v = cbrtf( 27.0 );\n* // returns 3.0\n*\n* @example\n* var v = cbrtf( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = cbrtf( -9.0 );\n* // returns ~-2.08\n*\n* @example\n* var v = cbrtf( NaN );\n* // returns NaN\n*/\nfunction cbrtf( x ) {\n\treturn float64ToFloat32( cbrt( float64ToFloat32( x ) ) );\n}\n\n\n// EXPORTS //\n\nexport default cbrtf;\n"],"names":["cbrtf","x","float64ToFloat32","cbrt"],"mappings":";;mMAuDA,SAASA,EAAOC,GACf,OAAOC,EAAkBC,EAAMD,EAAkBD"}